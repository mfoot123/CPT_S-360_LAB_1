~Part 1:~

Project Title: MyPrintf

Project Description:

Given: putchar(char c) of Linux, which prints a char.

  * Wrote my own prints(char *s) function to print a string.
  * Wrote my own functions
		  - printx(u32 x) which print x in HEX   (prefixed with 0x )
      - printd(int x) which print an integer (where x may be negative)
  * Wrote my own myprintf(char *fmt, ...) function to print 
         - char by %c
         - string by %s
	       - unsigned integer by %u
         - unsigned integer in HEX by %x
         - integer by %d
  * In the int main(int argc, char *argv[ ], char *env[ ]) function, 
     used myprintf() to print
         - argc value
         - argv strings
         - env  strings
              
  * NOTE: This assignment is for 32-bit GCC, which passes parameters on stack.
  
  
  
  
~Part 2:~

Project Title: Partition Table

Project Description: 

  * Wrote a C progrom to display the partition table of vdisk in:
      - Linux fdisk 'p' output form for the first 4 partitions
      - Linux fdisk 'p' output form including ALL the extend partitions 





Instrcutions to run:
Run ~mk.sh~ to compile your code. After running ~mk.sh~ you
can run the result with ~./a.out~, or run ~./mk.sh && ./a.out~ to
automatically compile and run in one command.

+ The provided ~myprintf~ binary file is a program which serves as a
  sample solution for part 1.
+ The ~ptable~ binary is the sample solution for part 2.
+ ~vdisk~ is a virtual disk image with a master boot record and a few
  partitions on it.

Part 2 of the assignment roughly corresponds to section 7.3 in KC's
book /Systems Programming in Unix\/Linux/.
